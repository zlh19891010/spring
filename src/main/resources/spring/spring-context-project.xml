<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd
                        http://www.springframework.org/schema/util 
                        http://www.springframework.org/schema/util/spring-util-4.1.xsd
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
                        http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<!-- 配置文件 -->
	<bean id="configProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:conf/jdbc.properties</value>
				<value>classpath:conf/app.properties</value>
			</list>
		</property>
	</bean>

	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter" lazy-init="true">
		<description>状态过滤器</description>
		<property name="slowSqlMillis" value="3000" />
		<property name="logSlowSql" value="true" />
		<property name="mergeSql" value="true" />
	</bean>

	<!-- 数据源配置开始 -->
	<bean id="baseDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" init-method="init" lazy-init="true">
		<description>数据库连接</description>
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="initialSize" value="${db.initialSize}" />
		<property name="maxActive" value="${db.maxActive}" />
		<property name="minIdle" value="${db.minIdle}" />
		<property name="maxWait" value="${db.maxWait}" />
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
			</list>
		</property>
		<property name="filters" value="${druid.filters}" />
		<property name="testWhileIdle" value="${db.testWhileIdle}" />
		<property name="testOnBorrow" value="${db.testOnBorrow}" />
		<property name="testOnReturn" value="${db.testOnReturn}" />
		<property name="validationQuery" value="${db.validationQuery}" />
		<property name="timeBetweenLogStatsMillis" value="${db.timeBetweenLogStatsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}" />
		<property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}" />
	</bean>
	<bean id="gameDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" init-method="init" lazy-init="true">
		<description>数据库连接</description>
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url2}" />
		<property name="username" value="${db.username2}" />
		<property name="password" value="${db.password2}" />
		<property name="initialSize" value="${db.initialSize}" />
		<property name="maxActive" value="${db.maxActive}" />
		<property name="minIdle" value="${db.minIdle}" />
		<property name="maxWait" value="${db.maxWait}" />
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
			</list>
		</property>
		<property name="filters" value="${druid.filters}" />
		<property name="testWhileIdle" value="${db.testWhileIdle}" />
		<property name="testOnBorrow" value="${db.testOnBorrow}" />
		<property name="testOnReturn" value="${db.testOnReturn}" />
		<property name="validationQuery" value="${db.validationQuery}" />
		<property name="timeBetweenLogStatsMillis" value="${db.timeBetweenLogStatsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}" />
		<property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}" />
	</bean>
	
	
	<!-- 动态配置数据源 -->  
   <bean id ="dataSource" class= "com.admin.dataSource.DynamicDataSource" >  
          <property name ="targetDataSources">  
                <map key-type ="java.lang.String">  
                      <entry value-ref ="baseDataSource" key= "baseDataSource"></entry >  
                      <entry value-ref ="gameDataSource" key= "gameDataSource"></entry >  
                </map >  
          </property >  
          <property name ="defaultTargetDataSource" ref= "baseDataSource"></property >      <!-- 默认使用ds1的数据源 -->  
   </bean >  
	
	<!-- 数据源配置完成 -->

	<bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
		<description>spring和MyBatis完美整合，不需要mybatis的配置映射文件</description>
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:mappers/*.xml" />
		<property name="typeAliasesPackage" value="com.admin.*" />
		<property name="plugins">
			<array>
				<!-- 分页插件配置 -->
				<bean id="paginationInterceptor" class="com.baomidou.mybatisplus.plugins.PaginationInterceptor">
					<property name="dialectType" value="mysql" />
				</bean>
			</array>
		</property>
		<property name="globalConfig" ref="globalConfig" />
	</bean>

	<bean id="globalConfig" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
		<property name="idType" value="1" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<description>DAO接口所在包名，Spring会自动查找其下的类</description>
		<property name="basePackage" value="com.admin.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<bean class="com.baomidou.mybatisplus.spring.MybatisMapperRefresh">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
		<constructor-arg name="mapperLocations" value="classpath*:mappers/*.xml" />
		<constructor-arg name="enabled" value="true" />
	</bean>

	<!-- 事务配置开始 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="append*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="repair" propagation="REQUIRED" />
			<tx:method name="message*" propagation="REQUIRED" />

			<!-- <tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="load*" propagation="REQUIRED" read-only="true" />
			<tx:method name="search*" propagation="REQUIRED" read-only="true" /> -->
			<!-- <tx:method name="datagrid*" propagation="REQUIRED" read-only="true" /> -->

			<!-- <tx:method name="*" propagation="REQUIRED" read-only="true" /> -->
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<!-- 事务 -->
		<aop:pointcut id="txPointcut" expression="execution(* com.admin.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
		<!-- 事务 -->
		<!-- 日志 -->
		<aop:advisor pointcut="execution(* com.admin.service..*.*(..))" advice-ref="monitorLogInterceptor" />
		<!-- 日志 -->
	</aop:config>

	<context:component-scan base-package="com.admin" use-default-filters="false">
		<context:include-filter type="regex" expression="com.admin.dao.*" />
	</context:component-scan>

	<bean scope="singleton" id="idMake" class="com.baomidou.mybatisplus.idgen.ClusterIdMake">
		<constructor-arg index="0" value="${datacenterId}" />
		<constructor-arg index="1" value="${workerId}" />
	</bean>
    <!-- 日志 service -->
	<bean id="logInterface" class="com.admin.common.logger.LogInterfaceImpl"></bean>
	<bean id="monitorLogInterceptor" class="com.admin.common.logger.MonitorLogInterceptor">
		<property name="logInterface" ref="logInterface" />
	</bean>
	

	<!-- 引入Spring配置文件开始 -->
	<import resource="spring-context-app.xml" />
	<import resource="spring-context-mina.xml" />
	<!-- 引入Spring配置文件结束 -->
</beans>